{"version":3,"sources":["components/cheeseburger.svg","conexion/firebase.jsx","components/DetailReady.jsx","components/AddListReady.jsx","components/OrdersReady.jsx","view/ReadyOrdersView.jsx","components/Title.jsx","components/category.jsx","components/Aditional.jsx","components/menu.jsx","components/AddProducts.jsx","components/ResumeOrder.jsx","components/order.jsx","view/waiterView.jsx","components/DetailKitchen.jsx","components/AddNotes.jsx","components/OrderKitchen.jsx","view/KitchenView.jsx","Routes.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Detailkitchen","detailReady","data-testid","cantidad","producto","AddListReady","objeto","cliente","estado","fecha","order","className","Object","keys","map","element","DetailReady","key","id","OrdersReady","useState","ready","setReady","useCollectionData","firestore","collection","orderBy","value","loading","type","onClick","event","preventDefault","dataOrder","filter","ele","date","newobj","toDate","toString","ID","substring","indexOf","tiempo_espera","elemt","showOrdersReady","to","alt","src","ReadyOrdersView","Title","Logo","List","agregar","total","descripcion","precio","Aditional","console","log","Menu","array","setArray","arrayAditio","setAditio","useCollection","snapshotListenOptions","includeMetadataChanges","error","ChangeCategory","categoria","save","docs","data","item","img","products","JSON","stringify","scope","data-toggle","data-target","disabled","data-dismiss","AdicionalFunction","aditionalFunction","AddProducts","addOperation","eliminar","ResumeOrder","Order","newtotal","reset","client","setclient","onChange","valor","target","colSpan","aria-label","aria-hidden","obj","Date","add","then","doc","update","SendKitchen","WaiterView","arrOrder","setArrOrder","arrtotal","setArrTotal","buttonTotal","forEach","price","quantity","agregarProductoAlPedido","operacion","filterProducts","newArray","concat","mapProducts","elementCantidad","length","newArrayDel","position","findIndex","arrayProducts","splice","detail","AddNotes","time","setTime","DetailKitchen","presentHour","pastHour","calculateSeconds","seconds","hour","Math","floor","minute","second","calculateSecondsToString","getTime","OrderKitchen","kitchen","setKitchen","dataKitchen","KitchenView","Routes","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ff885b8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cheeseburger.74fb79b5.svg\";","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyA5j_SR_OulatAA5MZLdn98F4VbeaffzfA',\n  authDomain: 'burger-queen-3d16d.firebaseapp.com',\n  databaseURL: 'https://burger-queen-3d16d.firebaseio.com',\n  projectId: 'burger-queen-3d16d',\n  storageBucket: 'burger-queen-3d16d.appspot.com',\n  messagingSenderId: '924442370473',\n  appId: '1:924442370473:web:4eacd8010dfa16bded24b8',\n  measurementId: 'G-DMLE30J1NK',\n};\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction Detailkitchen({ detailReady }) {\n  return (\n    <section data-testid=\"itemsReady\">\n      <li>\n        {detailReady.cantidad}\n        {' '}\n        {detailReady.producto}\n      </li>\n    </section>\n  );\n}\nDetailkitchen.propTypes = {\n  detailReady: PropTypes\n    .shape({\n      cantidad: PropTypes.string.isRequired,\n      producto: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default Detailkitchen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DetailReady from './DetailReady';\n\n\nfunction AddListReady({ objeto }) {\n  const {\n    cliente, estado, fecha, order,\n  } = objeto;\n  return (\n    <section data-testid=\"addListReady\">\n      <div className=\"card waiter p-3 border border-dark readyCard\">\n        <div className=\"card-header border border-dark \">\n          <p data-testid=\"readyItem\" className=\"name-client\">\n            Cliente:\n            {' '}\n            {cliente}\n          </p>\n\n        </div>\n        <div data-testid=\"readyItem\" className=\"card-body\">\n          <div>\n            Estado:\n            {' '}\n            {estado}\n\n          </div>\n          <div data-testid=\"readyItem\">\n\n            Fecha:\n\n            <p>{fecha}</p>\n          </div>\n\n        </div>\n        <hr className=\"hr\" />\n        <footer className=\"footerReady\">\n          <ul>\n            Detalle:\n            {' '}\n            {Object.keys(order)\n              .map((element) => <DetailReady key={element.id} detailReady={order[element]} />)}\n          </ul>\n        </footer>\n      </div>\n    </section>\n  );\n}\nAddListReady.propTypes = {\n  objeto: PropTypes\n    .shape({\n      cliente: PropTypes.string.isRequired,\n      estado: PropTypes.string.isRequired,\n      fecha: PropTypes.number.isRequired,\n      order: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\n\nexport default AddListReady;\n","/* eslint-disable react/style-prop-object */\nimport React, { useState } from 'react';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { HashRouter, Link } from 'react-router-dom';\nimport firebase from '../conexion/firebase';\nimport AddListReady from './AddListReady';\n\nimport './OrderKitchen.css';\n\nconst OrdersReady = () => {\n  const [ready, setReady] = useState([]);\n  const [value, loading] = useCollectionData(\n    firebase.firestore().collection('orders').orderBy('newobj.fecha', 'asc'),\n  );\n  const showOrdersReady = () => {\n    const filterData = value.filter((ele) => ele.estado === 'Listo');\n    const dataOrder = filterData.map((element) => {\n      const date = element.newobj.fecha.toDate().toString();\n      const obj = {\n        ID: element.ID,\n        cliente: element.newobj.cliente,\n        estado: element.estado,\n        fecha: date.substring(0, date.indexOf('GMT')),\n        tiempo_espera: element.tiempo_espera,\n        order: element.newobj.order.map((elemt) => {\n          const detalle = {\n            cantidad: elemt.cantidad,\n            producto: elemt.producto,\n          };\n          return detalle;\n        }),\n      };\n      return obj;\n    });\n    setReady(dataOrder);\n  };\n  function listReady() {\n    if (loading) {\n      return 'Cargando...';\n    }\n    return ready\n      .map((element) => <AddListReady key={element.id} objeto={element} />);\n  }\n  return (\n    <HashRouter>\n      <section data-testid=\"containerOrdersReady\" className=\"view\">\n        <div className=\"d-flex p-2 badge badge-light  border border-light\">\n          <header className=\"ReadysHeader\">\n            <h2 className=\"title d-inline-flex p-2 bd-highlight\"> Pedidos Listos</h2>\n            <nav className=\"navReady\">\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-info buttonReady\"\n                onClick={(event) => {\n                  event.preventDefault();\n                  showOrdersReady();\n                }}\n              >\n                Orden\n              </button>\n              <Link to=\"/WaiterView\">\n                <img type=\"button\" className=\"btn-outline-info buttonReady \" alt=\"return\" src=\"https://img.icons8.com/ios/50/000000/left2.png\" />\n              </Link>\n            </nav>\n          </header>\n        </div>\n        <div className=\"card-columns\">\n          <blockquote className=\"blockquote mb-0 card-body\">\n            <main>\n              {listReady()}\n\n            </main>\n          </blockquote>\n        </div>\n      </section>\n    </HashRouter>\n  );\n};\nexport default OrdersReady;\n","import React from 'react';\nimport OrdersReady from '../components/OrdersReady';\n\nfunction ReadyOrdersView() {\n  return (\n    <section>\n      <OrdersReady />\n    </section>\n  );\n}\nexport default ReadyOrdersView;\n","import React from 'react';\nimport { HashRouter, Link } from 'react-router-dom';\nimport Logo from './cheeseburger.svg';\nimport './title.css';\n\nconst Title = () => (\n  <HashRouter>\n\n    <header data-testid=\"logo\" className=\"Header border border-dark d-flex p-2 bd-highlight\">\n      <h1 className=\" d-inline-flex p-2 bd-highlight\">BURGER QUEEN</h1>\n      <img src={Logo} className=\"App-logo\" alt=\"logo\" />\n      <nav>\n        <ul>\n          <li>\n            <Link type=\"button\" className=\"navTitle btn btn-dark\" to=\"/KitchenView\"> Orden Cocina</Link>\n            <Link type=\"button\" className=\"navTitle btn btn-dark\" to=\"/ReadyOrdersView\"> Pedidos Listos</Link>\n\n          </li>\n        </ul>\n      </nav>\n\n    </header>\n  </HashRouter>\n);\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction List({\n  objeto, agregar, total,\n}) {\n  return (\n    <tr>\n      <td data-testid=\"items\">{objeto.descripcion}</td>\n      <td data-testid=\"items\">{objeto.precio}</td>\n      <td>\n        <input\n          type=\"image\"\n          src=\"https://img.icons8.com/ultraviolet/40/000000/add.png\"\n          alt=\"Añadir producto\"\n          data-testid=\"mostrar\"\n          onClick={(event) => {\n            event.preventDefault();\n            // console.log(objeto);\n            agregar(objeto, true);\n            total(objeto);\n          }}\n        />\n      </td>\n    </tr>\n  );\n}\n\nList.propTypes = {\n  objeto: PropTypes\n    .shape({\n      descripcion: PropTypes.string.isRequired,\n      precio: PropTypes.string.isRequired,\n    }).isRequired,\n  agregar: PropTypes.func.isRequired,\n  total: PropTypes.func.isRequired,\n};\nexport default List;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Aditional({ objeto, agregar, total }) {\n/*   console.log(objeto); */\n\n  return (\n    <tr>\n      <td data-testid=\"items\">{objeto.descripcion}</td>\n      <td data-testid=\"items\">{objeto.precio}</td>\n      <td>\n        <input\n          type=\"image\"\n          src=\"https://img.icons8.com/ultraviolet/40/000000/add.png\"\n          alt=\"Añadir producto\"\n          data-testid=\"agregar\"\n          onClick={(event) => {\n            event.preventDefault();\n            console.log(objeto);\n            agregar(objeto, true);\n            total(objeto);\n          }}\n        />\n      </td>\n    </tr>\n  );\n}\n\nAditional.propTypes = {\n  objeto: PropTypes\n    .shape({\n      descripcion: PropTypes.string.isRequired,\n      precio: PropTypes.string.isRequired,\n    }).isRequired,\n  agregar: PropTypes.func.isRequired,\n  total: PropTypes.func.isRequired,\n};\nexport default Aditional;\n","import React, { useState } from 'react';\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport PropTypes from 'prop-types';\nimport firebase from '../conexion/firebase';\nimport './menu.css';\nimport List from './category';\nimport Aditional from './Aditional';\n\nconst Menu = ({ agregar, total }) => {\n  const [array, setArray] = useState([]);\n  const [arrayAditio, setAditio] = useState([]);\n\n  const [value, loading, error] = useCollection(\n    firebase.firestore().collection('menu'),\n    {\n      snapshotListenOptions: { includeMetadataChanges: true },\n    },\n  );\n\n  function ChangeCategory(categoria) {\n    const save = value.docs.map((element) => {\n      const obj = {\n        categoria: element.data().categoria,\n        descripcion: element.data().item,\n        precio: element.data().precio,\n        id: element.id,\n        img: element.img,\n      };\n      return obj;\n    });\n    /* setArray(save.filter((products) => products.categoria === categoria)); */\n    if (categoria === 'adicional') {\n      setAditio(save.filter((products) => products.categoria === 'adicional'));\n    } if (categoria !== 'adicional') {\n      setArray(save.filter((products) => products.categoria === categoria));\n    }\n    // eslint-disable-next-line no-console\n    console.log(JSON.stringify(array));\n  }\n\n  function ListElements() {\n    if (loading) {\n      return 'Cargando...';\n    }\n    if (error) {\n      return 'Hubo un error';\n    }\n    return array\n      .map((element) => <List key={element.id} objeto={element} agregar={agregar} total={total} />);\n  }\n  function AdicionalFunction() {\n    if (loading) {\n      return 'Cargando...';\n    }\n    if (error) {\n      return 'Hubo un error';\n    }\n    return arrayAditio\n      .map((element) => (\n        <Aditional\n          key={element.id}\n          objeto={element}\n          agregar={agregar}\n          total={total}\n          aditionalFunction={AdicionalFunction}\n        />\n      ));\n  }\n\n  return (\n    <nav>\n      <button\n        type=\"button\"\n        className=\"Desayuno btn btn-info\"\n        data-testid=\"desayuno\"\n        onClick={(event) => {\n          event.preventDefault();\n          ChangeCategory('desayuno');\n        }}\n      >\n        Desayuno\n      </button>\n      <button\n        type=\"button\"\n        className=\"Hamburguesa btn btn-dark\"\n        onClick={(event) => {\n          event.preventDefault();\n          ChangeCategory('hamburguesa');\n        }}\n      >\n        Hamburguesa\n      </button>\n      <button\n        type=\"button\"\n        className=\"Acompañamiento btn btn-info\"\n        onClick={(event) => {\n          event.preventDefault();\n          ChangeCategory('acompañamiento');\n        }}\n      >\n        Acompañamiento\n      </button>\n      <button\n        type=\"button\"\n        className=\"Bebidas btn btn-dark\"\n        onClick={(event) => {\n          event.preventDefault();\n          ChangeCategory('bebidas');\n        }}\n      >\n        Bebidas\n      </button>\n      <table className=\"table table-striped\">\n        <thead className=\"tabla-orden\">\n          <tr>\n            <th scope=\"col\">Producto</th>\n            <th scope=\"col\">Precio</th>\n            <th scope=\"col\">Agregar</th>\n          </tr>\n        </thead>\n        <tbody>\n          {ListElements()}\n        </tbody>\n      </table>\n      <div className=\"container\">\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary\"\n          data-toggle=\"modal\"\n          data-target=\"#myModal\"\n          disabled={array === 'hamburguesa'}\n          onClick={(event) => {\n            event.preventDefault();\n            ChangeCategory('adicional');\n          }}\n        >\n          Adicional\n        </button>\n        <div className=\"modal fade\" id=\"myModal\">\n          <div className=\"modal-dialog modal-sm\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\"> Adicionales </h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n              </div>\n              <div className=\"modal-body\" />\n              <table className=\"table table-striped\">\n                <thead className=\"tabla-orden\">\n                  <tr>\n                    <th scope=\"col\">Producto</th>\n                    <th scope=\"col\">Precio</th>\n                    <th scope=\"col\">Agregar</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {AdicionalFunction()}\n                </tbody>\n              </table>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </nav>\n  );\n};\nMenu.propTypes = {\n  agregar: PropTypes.func.isRequired,\n  total: PropTypes.func.isRequired,\n};\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AddProducts({\n  data, addOperation, total, eliminar,\n}) {\n  // console.log(data);\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"image\"\n          src=\"https://img.icons8.com/ultraviolet/40/000000/minus.png\"\n          alt=\"Restar producto\"\n          data-testid=\"quitar\"\n          onClick={(event) => {\n            event.preventDefault();\n            addOperation(data, false);\n            total();\n          }}\n        />\n      </td>\n      <td data-testid=\"products\">{data.cantidad}</td>\n      <td>\n        <input\n          type=\"image\"\n          src=\"https://img.icons8.com/ultraviolet/40/000000/add.png\"\n          alt=\"Añadir producto\"\n          data-testid=\"agregar\"\n          onClick={(event) => {\n            event.preventDefault();\n            addOperation(data, true);\n            total();\n          }}\n        />\n      </td>\n      <td data-testid=\"products\">{data.producto}</td>\n      <td data-testid=\"products\">{data.precio * data.cantidad}</td>\n      <td>\n        <input\n          type=\"image\"\n          src=\"https://img.icons8.com/officel/40/000000/delete-sign.png\"\n          alt=\"Eliminar producto\"\n          data-testid=\"eliminar\"\n          onClick={(event) => {\n            event.preventDefault();\n            eliminar(data);\n            total();\n          }}\n        />\n      </td>\n\n    </tr>\n  );\n}\n\nAddProducts.propTypes = {\n  data: PropTypes\n    .shape({\n      cantidad: PropTypes.string.isRequired,\n      producto: PropTypes.string.isRequired,\n      precio: PropTypes.string.isRequired,\n    }).isRequired,\n  addOperation: PropTypes.func.isRequired,\n  eliminar: PropTypes.func.isRequired,\n  total: PropTypes.func.isRequired,\n};\nexport default AddProducts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ResumeOrder({\n  data,\n}) {\n  return (\n    <tr data-testid=\"resume\">\n      <td>{data.cantidad}</td>\n      <td>{data.producto}</td>\n      <td>{data.precio * data.cantidad}</td>\n    </tr>\n  );\n}\n\nResumeOrder.propTypes = {\n  data: PropTypes\n    .shape({\n      cantidad: PropTypes.string.isRequired,\n      producto: PropTypes.string.isRequired,\n      precio: PropTypes.string.isRequired,\n    }).isRequired,\n};\nexport default ResumeOrder;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddProducts from './AddProducts';\nimport ResumeOrder from './ResumeOrder';\n\nfunction Order({\n  data, addOperation, total, eliminar, newtotal, reset,\n}) {\n  const [client, setclient] = useState('');\n  const recorre = () => Object.keys(data).map((element) => (\n    <AddProducts\n      data={data[element]}\n      addOperation={addOperation}\n      total={total}\n      eliminar={eliminar}\n    />\n  ));\n  const containerModal = () => Object.keys(data).map((element) => (\n    <ResumeOrder\n      data={data[element]}\n    />\n  ));\n  function NameClient(event) {\n    const valor = event.target.value;\n    // console.log(valor);\n    setclient(valor);\n  }\n\n  const SendKitchen = (obj) => {\n    const newobj = {\n      cliente: client,\n      order: obj,\n      total: newtotal,\n      fecha: new Date(),\n    };\n    firebase.firestore()\n      .collection('orders')\n      .add({\n        newobj,\n      }).then((objeto) => {\n        // console.log(objeto.id);\n        firebase.firestore()\n          .collection('orders').doc(objeto.id).update({\n            ID: objeto.id,\n            estado: '',\n            tiempo_espera: '',\n          });\n      });\n    /*     console.log(newobj); */\n    setclient('');\n    reset();\n  };\n  return (\n    <div>\n      <span>Nombre del cliente</span>\n      <input data-testid=\"input\" type=\"text\" value={client} onChange={NameClient} />\n      <table data-testid=\"mostrarTabla\" className=\"table table-bordered table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">-</th>\n            <th scope=\"col\">Cantidad</th>\n            <th scope=\"col\">+</th>\n            <th scope=\"col\">Producto</th>\n            <th scope=\"col\">Precio</th>\n            <th scope=\"col\">Eliminar</th>\n          </tr>\n        </thead>\n        <tbody>\n          {recorre()}\n          <tr>\n            <th colSpan=\"3\">Total</th>\n            <th>S/ </th>\n            <th colSpan=\"2\">\n              {total()}\n            </th>\n          </tr>\n        </tbody>\n      </table>\n      <div className=\"container\">\n\n        <button\n          type=\"button\"\n          id=\"button\"\n          className=\"btn btn-secondary\"\n          data-toggle=\"modal\"\n          data-target=\"#exampleModal\"\n          data-testid=\"confirmarpedido\"\n          disabled={client === ''}\n        >\n          Confirmar pedido\n        </button>\n        <div className=\"modal fade\" id=\"exampleModal\" data-testid=\"modal\">\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Resumen pedido</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <h5>\n                  Cliente:\n                  {' '}\n                  {client}\n                </h5>\n                <table className=\"table\">\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Productos</th>\n                      <th scope=\"col\">Precio</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {containerModal()}\n                    <tr>\n                      <th colSpan=\"2\">Total</th>\n                      <th>\n                        {total()}\n                      </th>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  data-dismiss=\"modal\"\n                  data-testid=\"enviarcocina\"\n                  onClick={(event) => {\n                    event.preventDefault();\n                    SendKitchen(data);\n                  }}\n                >\n                  Enviar a cocina\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nOrder.propTypes = {\n  data: PropTypes\n    .shape({\n      producto: PropTypes.string.isRequired,\n      precio: PropTypes.number.isRequired,\n      cantidad: PropTypes.number.isRequired,\n    }).isRequired,\n  addOperation: PropTypes.func.isRequired,\n  newtotal: PropTypes.number.isRequired,\n  reset: PropTypes.func.isRequired,\n  total: PropTypes.func.isRequired,\n  eliminar: PropTypes.func.isRequired,\n};\n\nexport default Order;\n","import React, { useState } from 'react';\nimport Title from '../components/Title';\nimport Menu from '../components/menu';\nimport Order from '../components/order';\nimport '../components/title.css';\n\nfunction WaiterView() {\n  const [arrOrder, setArrOrder] = useState([]);\n  const [arrtotal, setArrTotal] = useState(0);\n\n  const buttonTotal = () => {\n    let total = 0;\n    arrOrder.forEach((element) => {\n      const price = element.precio;\n      const quantity = element.cantidad;\n      total += (price * quantity);\n      setArrTotal(total);\n    });\n    return (total);\n  };\n\n  const orderReset = () => {\n    setArrOrder([]);\n  };\n\n  function Delete(data) {\n    const newArrayDel = [...arrOrder];\n    const position = arrOrder.findIndex((element) => element.id === data.id);\n    // console.log(position);\n    const arrayProducts = newArrayDel.splice(position, 1);\n    console.log(arrayProducts);\n    setArrOrder(newArrayDel);\n  }\n  const agregarProductoAlPedido = (obj, operacion) => {\n    const newobj = {\n      producto: obj.descripcion,\n      precio: obj.precio,\n      cantidad: 1,\n      id: obj.id,\n    };\n    const filterProducts = arrOrder.filter((element) => element.id === newobj.id);\n    const newArray = arrOrder.concat([newobj]);\n    const mapProducts = arrOrder.map((element) => {\n      const elementCantidad = element;\n      if (element.id === newobj.id) {\n        if (element.cantidad >= 1) {\n          if (operacion === false) {\n            elementCantidad.cantidad -= 1;\n          }\n        }\n        if (operacion === true) {\n          elementCantidad.cantidad += 1;\n        } else if (element.cantidad >= 2) {\n          if (operacion === false) {\n            elementCantidad.cantidad -= 1;\n          }\n        }\n      }\n      return elementCantidad;\n    });\n    if (filterProducts.length === 0) {\n      setArrOrder(newArray);\n    } else {\n      setArrOrder(mapProducts);\n    }\n  };\n  return (\n    <div className=\"viewWaiter\" data-testid=\"containerWaiterView\">\n      <Title />\n      <div className=\"d-flex bd-highlight\">\n        <div className=\"p-2 flex-fill bd-highlight\">\n          <Menu agregar={agregarProductoAlPedido} total={buttonTotal} />\n        </div>\n        <div className=\"p-2 flex-fill bd-highlight\">\n          <Order\n            data={arrOrder}\n            addOperation={agregarProductoAlPedido}\n            total={buttonTotal}\n            eliminar={Delete}\n            newtotal={arrtotal}\n            reset={orderReset}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WaiterView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction Detailkitchen({ detail }) {\n  return (\n    <ul data-testid=\"itemsKitchen\">\n      <li>\n        {detail.cantidad}\n        {' '}\n        {detail.producto}\n      </li>\n    </ul>\n  );\n}\nDetailkitchen.propTypes = {\n  detail: PropTypes\n    .shape({\n      cantidad: PropTypes.string.isRequired,\n      producto: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default Detailkitchen;\n","import React, { useState } from 'react';\nimport './OrderKitchen.css';\nimport firebase from 'firebase';\nimport PropTypes from 'prop-types';\nimport DetailKitchen from './DetailKitchen';\n\nfunction AddNotes({ objeto }) {\n  const {\n    cliente, fecha, order, ID,\n  } = objeto;\n  const [time, setTime] = useState('');\n\n  const calculateSecondsToString = (seconds) => {\n    let hour = Math.floor(seconds / 3600);\n    hour = (hour < 10) ? `0${hour}` : hour;\n    let minute = Math.floor((seconds / 60) % 60);\n    minute = (minute < 10) ? `0${minute}` : minute;\n    let second = seconds % 60;\n    second = (second < 10) ? `0${second}` : second;\n\n    const timeSecond = `${hour}:${minute}:${second}`;\n    return timeSecond;\n  };\n\n  const calculateTimeOrder = () => {\n    const date = new Date().toString();\n    const presentHour = new Date(date.substring(0, date.indexOf('GMT')));\n    const pastHour = new Date(fecha);\n    const restHour = presentHour.getTime() - pastHour.getTime();\n    const calculateHour = restHour / 1000;\n    const calculateSeconds = calculateSecondsToString(calculateHour);\n    setTime(calculateSeconds);\n    firebase.firestore().collection('orders').doc(ID).update({\n      estado: 'Listo',\n      tiempo_espera: calculateSeconds,\n    });\n  };\n\n  return (\n    <section>\n      <div className=\"card waiter p-3 border border-dark readyCard\">\n        <div className=\"card-header border border-dark \">\n          <p className=\"name-client\">\n            Cliente:\n            {' '}\n            {cliente}\n          </p>\n\n        </div>\n        <div className=\"card-body\">\n          <li>\n            Orden:\n            {' '}\n            {Object.keys(order)\n              .map((element) => <DetailKitchen key={element.id} detail={order[element]} />)}\n          </li>\n          <li>\n            Fecha:\n            {' '}\n            {fecha}\n          </li>\n          <hr className=\"hr\" />\n          <footer className=\"\">\n            <input type=\"checkbox\" onChange={calculateTimeOrder} />\n            <span> Listo </span>\n            <span>\n              <p>Tiempo de espera: </p>\n              <p>{time}</p>\n            </span>\n          </footer>\n        </div>\n      </div>\n    </section>\n  );\n}\nAddNotes.propTypes = {\n  objeto: PropTypes\n    .shape({\n      cliente: PropTypes.string.isRequired,\n      fecha: PropTypes.number.isRequired,\n      order: PropTypes.string.isRequired,\n      ID: PropTypes.string.isRequired,\n    }).isRequired,\n};\nexport default AddNotes;\n","import React, { useState } from 'react';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { Link } from 'react-router-dom';\nimport firebase from '../conexion/firebase';\nimport AddNotes from './AddNotes';\nimport './OrderKitchen.css';\n\nconst OrderKitchen = () => {\n  const [kitchen, setKitchen] = useState([]);\n  const [value, loading, error] = useCollectionData(\n    firebase.firestore().collection('orders').orderBy('newobj.fecha', 'asc'),\n  );\n  const dataOrder = () => {\n    const filterData = value.filter((ele) => ele.estado === '');\n    const dataKitchen = filterData.map((element) => {\n      const date = element.newobj.fecha.toDate().toString();\n      const obj = {\n        ID: element.ID,\n        cliente: element.newobj.cliente,\n        fecha: date.substring(0, date.indexOf('GMT')),\n        order: element.newobj.order.map((elemt) => {\n          const detalle = {\n            cantidad: elemt.cantidad,\n            producto: elemt.producto,\n          };\n          return detalle;\n        }),\n      };\n      return obj;\n    });\n    setKitchen(dataKitchen);\n    console.log(JSON.stringify(kitchen));\n  };\n  function ListNotes() {\n    if (loading) {\n      return 'Cargando...';\n    }\n    if (error) {\n      return 'Hubo un error';\n    }\n    return kitchen\n      .map((element) => <AddNotes key={element.id} objeto={element} />);\n  }\n  return (\n    <section className=\"view\">\n      <div className=\"d-flex p-2 badge badge-light  border border-light\">\n\n        <header className=\"text-center  d-flex justify-content-center ReadysHeader\">\n          <h2 className=\"title-viewKitchen title d-inline-flex p-2 bd-highlight\"> Órdenes en espera... </h2>\n          <nav className=\"navReady\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-info buttonReady\"\n              onClick={(event) => {\n                event.preventDefault();\n                dataOrder();\n              }}\n            >\n              Orden\n            </button>\n            <Link to=\"/WaiterView\">\n              <img type=\"button\" className=\"btn-outline-info buttonReady \" alt=\"return\" src=\"https://img.icons8.com/ios/50/000000/left2.png\" />\n            </Link>\n          </nav>\n        </header>\n      </div>\n      <div className=\"card-columns\">\n        <blockquote className=\"blockquote mb-0 card-body\">\n          <main>\n            {ListNotes()}\n          </main>\n        </blockquote>\n      </div>\n\n    </section>\n  );\n};\nexport default OrderKitchen;\n","import React from 'react';\nimport OrderKitchen from '../components/OrderKitchen';\n\nfunction KitchenView() {\n  return (\n    <section>\n      <OrderKitchen />\n    </section>\n  );\n}\n\nexport default KitchenView;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ReadyOrdersView from './view/ReadyOrdersView';\nimport WaiterView from './view/waiterView';\nimport KitchenView from './view/KitchenView';\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={WaiterView} />\n    <Route exact path=\"/WaiterView\" component={WaiterView} />\n    <Route exact path=\"/KitchenView\" component={KitchenView} />\n    <Route exact path=\"/ReadyOrdersView\" component={ReadyOrdersView} />\n  </Switch>\n);\nexport default Routes;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\n// import logo from './logo.svg';\n/* import WaiterView from './view/waiterView';\nimport KitchenView from './view/KitchenView'; */\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div>\n        <Routes />\n      </div>\n    </HashRouter>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// Browser Router\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}